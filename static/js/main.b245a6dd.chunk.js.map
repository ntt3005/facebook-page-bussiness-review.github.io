{"version":3,"sources":["components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["TaskForm","props","onCloseForm","onChange","event","tagert","target","name","value","setState","onSubmit","preventDefault","state","id","status","this","taskedit","nextProps","className","onClick","type","Component","Search","onSearch","keyword","placeholder","Sort","role","Control","TaskItem","onUpdateStatus","task","onDelItem","onUpdate","index","TaskList","onFilter","filterName","filterStatus","tasks","elmTasks","map","App","OpenForm","isDisplayForm","onShowForm","data","generateID","push","findIndex","localStorage","setItem","JSON","stringify","splice","result","forEach","parseInt","filter","toLowerCase","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","elmTaskForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b245a6dd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TaskForm extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            id  : '',\r\n            name : '',\r\n            status: false\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        if (this.props.taskedit){\r\n            this.setState({\r\n                'id': this.props.taskedit.id,\r\n                'name': this.props.taskedit.name,\r\n                'status': this.props.taskedit.status,\r\n            });\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if (nextProps && nextProps.taskedit){\r\n            this.setState({\r\n                'id': nextProps.taskedit.id,\r\n                'name': nextProps.taskedit.name,\r\n                'status': nextProps.taskedit.status,\r\n            });\r\n        }\r\n        else if (!nextProps.taskedit){\r\n            this.setState({\r\n                id  : '',\r\n                name : '',\r\n                status: false\r\n            });\r\n        }\r\n    }\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var tagert = event.target;\r\n        var name = tagert.name;\r\n        var value = tagert.value;\r\n        if (name === 'status'){\r\n            value = tagert.value === 'true' ? true : false;\r\n        }\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n    }\r\n\r\n    render(){\r\n        var { id } = this.state;\r\n        return (\r\n            <div className=\"panel panel-warning\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\"> { id !== '' ? 'Cập Nhật Công Việc': 'Thêm Công Việc'}</h3>\r\n                    <span \r\n                        className=\"fa fa-times-circle text-right\"\r\n                        onClick = { this.onCloseForm}\r\n                    >\r\n                    </span>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <form onSubmit= {this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Tên :</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                name = \"name\"\r\n                                value = {this.state.name}\r\n                                onChange = {this.onChange}\r\n                            />\r\n                        </div>\r\n                        <label>Trạng Thái :</label>\r\n                        <select \r\n                            className=\"form-control\" \r\n                            name = \"status\" \r\n                            value = {this.state.status}\r\n                            onChange = {this.onChange}\r\n                        >\r\n                            <option value={true}>Kích Hoạt</option>\r\n                            <option value={false}>Ẩn</option>\r\n                        </select>\r\n                        <br/>\r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\">Lưu lại</button>&nbsp;\r\n                            <button type=\"submit\" className=\"btn btn-danger\">Hủy Bỏ</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            keyword : ''\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    onSearch = () => {\r\n        this.props.onSearch(this.state.keyword);\r\n    }\r\n\r\n    render(){\r\n        var { keyword } = this.state;\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">                \r\n                <div className=\"input-group\">\r\n                    <input\r\n                        name = \"keyword\" \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Nhập từ khóa...\"\r\n                        value = { keyword }\r\n                        onChange = { this.onChange } \r\n                    />\r\n                    <span className=\"input-group-btn\">\r\n                        <button \r\n                            className=\"btn btn-primary\" \r\n                            type=\"button\"\r\n                            onClick = {this.onSearch}\r\n                        >\r\n                            <span className=\"fa fa-search mr-5\"></span> Tìm\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n            </div>             \r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\n\r\nclass Sort extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">                \r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                        Sắp Xếp  <span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n                    </button>\r\n\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li>\r\n                            <a role=\"button\">\r\n                                <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                    Tên A-Z\r\n                                </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a role=\"button\">\r\n                                <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                    Tên Z-A\r\n                                </span>\r\n                            </a>\r\n                        </li>\r\n                        <li role=\"separator\" className=\"divider\"></li>\r\n                        <li><a role=\"button\">Trạng Thái Kích Hoạt</a></li>\r\n                        <li><a role=\"button\">Trạng Thái Ẩn</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>          \r\n        );\r\n    }\r\n}\r\n\r\nexport default Sort;","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\nclass Control extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                {/*Search*/}\r\n                <Search  onSearch = {this.props.onSearch}/>\r\n                {/*Sort*/}\r\n                <Sort />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;","import React, { Component } from 'react';\r\nclass TaskItem extends Component {\r\n    onUpdateStatus = () => {\r\n        this.props.onUpdateStatus(this.props.task.id);\r\n    }\r\n    onDelItem = () => {\r\n        this.props.onDelItem(this.props.task.id);\r\n    }\r\n\r\n    onUpdate = () => {\r\n        this.props.onUpdate(this.props.task.id);\r\n    }\r\n    \r\n    render(){\r\n        var { task, index } = this.props; \r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{task.name}</td>\r\n                <td className=\"text-center\">\r\n                    <span\r\n                        onClick = {this.onUpdateStatus} \r\n                        className={ task.status === true ? 'label label-success' : 'label label-danger'}>\r\n                        { task.status === true ? 'Kích hoạt' : 'Ẩn'}\r\n                    </span>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button type=\"button\" className=\"btn btn-warning\" onClick = {this.onUpdate}>\r\n                        <span className=\"fa fa-pencil mr-5\"></span> Sửa\r\n                    </button>\r\n                    &nbsp;\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onDelItem}>\r\n                        <span className=\"fa fa-trash mr-5\"></span> Xóa\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\nclass TaskList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            filterName : '',\r\n            filterStatus : -1\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.props.onFilter( \r\n            name === 'filterName' ? value : this.state.filterName,\r\n            name === 'filterStatus' ? value : this.state.filterStatus,\r\n        )\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        var  { tasks } = this.props;\r\n        var { filterName, filterStatus } = this.state;\r\n        var elmTasks = tasks.map((task, index) => {\r\n            return <TaskItem \r\n                        key = {task.id} \r\n                        index = {index} \r\n                        task={task}\r\n                        onUpdateStatus = {this.props.onUpdateStatus}\r\n                        onDelItem =  {this.props.onDelItem}\r\n                        onUpdate = {this.props.onUpdate}\r\n                    />\r\n        })\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <table className=\"table table-bordered table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-center\">STT</th>\r\n                                <th className=\"text-center\">Tên</th>\r\n                                <th className=\"text-center\">Trạng Thái</th>\r\n                                <th className=\"text-center\">Hành Động</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name = \"filterName\"\r\n                                        value = { filterName }\r\n                                        onChange = { this.onChange }\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <select \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name = \"filterStatus\"\r\n                                        value = { filterStatus }\r\n                                        onChange = { this.onChange }\r\n                                    >\r\n                                        <option value={-1}>Tất Cả</option>\r\n                                        <option value={0}>Ẩn</option>\r\n                                        <option value={1}>Kích Hoạt</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                            {/*Item*/}\r\n                            {elmTasks}\r\n                        \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            tasks : [],\n            isDisplayForm: false,\n            taskedit: null,\n            filter: {\n                name : '',\n                status: -1\n            },\n            keyword : ''\n        }\n    }\n\n    componentWillMount(){\n        if (localStorage && localStorage.getItem('tasks')){\n            var tasks = JSON.parse(localStorage.getItem('tasks'));\n            this.setState({\n                'tasks': tasks\n            });\n        }\n    }\n\n    s4(){\n        return Math.floor((1+Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    generateID(){\n        return this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4()  + '-' + this.s4() + '-' + this.s4() + '-' + this.s4(); \n    }\n\n    OpenForm = () => {\n        if (this.state.isDisplayForm && this.state.taskedit != null){\n            this.setState({\n                taskedit: null\n            });\n        }else{\n            this.setState({\n                isDisplayForm : !this.state.isDisplayForm,\n                taskedit: null\n            });\n        }\n        \n    }\n\n    onCloseForm = () => {\n        this.setState({\n            isDisplayForm : false\n        });\n    }\n\n    onShowForm = () => {\n        this.setState({\n            isDisplayForm : true\n        });\n    }\n\n    onSubmit = (data) => {\n        var { tasks } = this.state;\n        if (data.id === ''){\n            data.id = this.generateID()\n            tasks.push(data);\n        }else{\n            var index = this.findIndex(data.id);\n            tasks[index] = data;\n        }\n        this.setState({\n            'tasks': tasks,\n            'taskedit': null\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n        this.onCloseForm();\n    }\n\n    onUpdateStatus = (id) => {\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        if (index !== -1){\n            tasks[index].status = !tasks[index].status;\n            this.setState({\n                'tasks': tasks\n            });\n            localStorage.setItem('tasks', JSON.stringify(tasks));\n        }\n    }\n\n    onDelItem = (id) => {\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        if (index !== -1){\n            tasks.splice(index, 1);\n            this.setState({\n                'tasks': tasks\n            });\n            localStorage.setItem('tasks', JSON.stringify(tasks));\n        }\n    }\n\n    onUpdate = (id) => {\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        if (index !== -1){\n            var taskedit = tasks[index];\n            this.setState({\n                'taskedit': taskedit\n            });\n            this.onShowForm();\n        }\n    }\n\n    findIndex = (id) => {\n        var {tasks} = this.state;\n        var result = -1;\n        tasks.forEach((task, index) => {\n            if (task.id === id){\n                result = index;\n            }\n        });\n        return result;\n    }\n\n    onFilter = (filterName, filterStatus) => {\n        filterStatus = parseInt(filterStatus, 10);\n        this.setState({\n            filter : {\n                name : filterName.toLowerCase(),\n                status: filterStatus\n            }\n        });\n    }\n\n    onSearch = (keyword) => {\n        this.setState({\n            'keyword': keyword\n        });\n    }\n\n\n    render(){\n        var { tasks, isDisplayForm , taskedit, filter, keyword } = this.state;\n        if (filter){\n            if(filter.name){\n                tasks = tasks.filter((task)=>{\n                    return task.name.indexOf(filter.name) !== -1;\n                });\n            }\n        \n            tasks = tasks.filter((task)=>{\n                if (filter.status === -1){\n                    return task;\n                }else{\n                    return task.status === (filter.status === 1 ? true : false);\n                }\n            });\n            \n        }\n        if (keyword){\n            tasks = tasks.filter((task) => {\n                return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n            });\n        }\n        var elmTaskForm = isDisplayForm ? <TaskForm onSubmit = {this.onSubmit} onCloseForm = {this.onCloseForm} taskedit = {taskedit} /> : '';\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1>\n                    <hr/>\n                </div>\n                <div className=\"row\">\n                    <div className={isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n                        {elmTaskForm}\n                    </div>\n                    <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>    \n                        <button type=\"button\" className=\"btn btn-primary\" onClick= {this.OpenForm}>\n                            Thêm Công Việc\n                        </button>\n                        <Control onSearch = { this.onSearch }/>\n                        <TaskList \n                            tasks= {tasks} \n                            onUpdateStatus = {this.onUpdateStatus}\n                            onDelItem = {this.onDelItem}\n                            onUpdate = {this.onUpdate}\n                            onFilter = {this.onFilter}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}